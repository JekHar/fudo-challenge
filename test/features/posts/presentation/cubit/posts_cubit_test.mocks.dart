// Mocks generated by Mockito 5.4.4 from annotations
// in fudo_challenge/test/features/posts/presentation/cubit/posts_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:dartz/dartz.dart' as _i3;
import 'package:fudo_challenge/core/error/failures.dart' as _i9;
import 'package:fudo_challenge/core/interfaces/network_info.dart' as _i6;
import 'package:fudo_challenge/core/usecases/usecase.dart' as _i11;
import 'package:fudo_challenge/features/posts/data/datasources/users_local_data_source.dart'
    as _i5;
import 'package:fudo_challenge/features/posts/data/datasources/users_remote_data_source.dart'
    as _i4;
import 'package:fudo_challenge/features/posts/data/repositories/users_repository_impl.dart'
    as _i14;
import 'package:fudo_challenge/features/posts/domain/entities/post.dart'
    as _i10;
import 'package:fudo_challenge/features/posts/domain/repositories/posts_repository.dart'
    as _i2;
import 'package:fudo_challenge/features/posts/domain/usecases/create_post.dart'
    as _i13;
import 'package:fudo_challenge/features/posts/domain/usecases/get_posts.dart'
    as _i7;
import 'package:fudo_challenge/features/posts/domain/usecases/get_posts_by_user.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostsRepository_0 extends _i1.SmartFake
    implements _i2.PostsRepository {
  _FakePostsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersRemoteDataSource_2 extends _i1.SmartFake
    implements _i4.UsersRemoteDataSource {
  _FakeUsersRemoteDataSource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersLocalDataSource_3 extends _i1.SmartFake
    implements _i5.UsersLocalDataSource {
  _FakeUsersLocalDataSource_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkInfo_4 extends _i1.SmartFake implements _i6.NetworkInfo {
  _FakeNetworkInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPosts].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPosts extends _i1.Mock implements _i7.GetPosts {
  MockGetPosts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePostsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PostsRepository);

  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>> call(
          _i11.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>>.value(
            _FakeEither_1<_i9.Failure, List<_i10.Post>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>>);
}

/// A class which mocks [GetPostsByUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPostsByUser extends _i1.Mock implements _i12.GetPostsByUser {
  MockGetPostsByUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePostsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PostsRepository);

  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>> call(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [userId],
        ),
        returnValue: _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>>.value(
            _FakeEither_1<_i9.Failure, List<_i10.Post>>(
          this,
          Invocation.method(
            #call,
            [userId],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i9.Failure, List<_i10.Post>>>);
}

/// A class which mocks [CreatePost].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePost extends _i1.Mock implements _i13.CreatePost {
  MockCreatePost() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePostsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PostsRepository);

  @override
  _i8.Future<_i3.Either<_i9.Failure, _i10.Post>> call(
          _i13.CreatePostParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i8.Future<_i3.Either<_i9.Failure, _i10.Post>>.value(
            _FakeEither_1<_i9.Failure, _i10.Post>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i8.Future<_i3.Either<_i9.Failure, _i10.Post>>);
}

/// A class which mocks [UsersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersRepository extends _i1.Mock implements _i14.UsersRepository {
  MockUsersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.UsersRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeUsersRemoteDataSource_2(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i4.UsersRemoteDataSource);

  @override
  _i5.UsersLocalDataSource get localDataSource => (super.noSuchMethod(
        Invocation.getter(#localDataSource),
        returnValue: _FakeUsersLocalDataSource_3(
          this,
          Invocation.getter(#localDataSource),
        ),
      ) as _i5.UsersLocalDataSource);

  @override
  _i6.NetworkInfo get networkInfo => (super.noSuchMethod(
        Invocation.getter(#networkInfo),
        returnValue: _FakeNetworkInfo_4(
          this,
          Invocation.getter(#networkInfo),
        ),
      ) as _i6.NetworkInfo);

  @override
  _i8.Future<List<_i4.User>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i8.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i8.Future<List<_i4.User>>);
}
