// Mocks generated by Mockito 5.4.4 from annotations
// in fudo_challenge/test/features/posts/domain/usecases/get_posts_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:fudo_challenge/core/error/failures.dart' as _i5;
import 'package:fudo_challenge/features/posts/domain/entities/post.dart' as _i6;
import 'package:fudo_challenge/features/posts/domain/repositories/posts_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRepository extends _i1.Mock implements _i3.PostsRepository {
  MockPostsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>> getPosts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Post>>(
          this,
          Invocation.method(
            #getPosts,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>> getPostsByUser(
          int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostsByUser,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Post>>(
          this,
          Invocation.method(
            #getPostsByUser,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Post>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Post>> createPost(
    String? title,
    String? body,
    int? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [
            title,
            body,
            userId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Post>>.value(
            _FakeEither_0<_i5.Failure, _i6.Post>(
          this,
          Invocation.method(
            #createPost,
            [
              title,
              body,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Post>>);
}
